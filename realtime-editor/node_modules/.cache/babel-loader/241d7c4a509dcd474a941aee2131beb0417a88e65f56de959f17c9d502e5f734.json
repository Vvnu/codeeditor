{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\Output.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, Button, Text, useToast } from \"@chakra-ui/react\";\nimport { executeCode } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = ({\n  editorRef,\n  language\n}) => {\n  _s();\n  const toast = useToast();\n  const [output, setOutput] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const runCode = async () => {\n    const sourceCode = editorRef.current.getValue();\n    if (!sourceCode) return;\n    try {\n      setIsLoading(true);\n      const {\n        run: result\n      } = await executeCode(language, sourceCode);\n      setOutput(result.output.split(\"\\n\"));\n      result.stderr ? setIsError(true) : setIsError(false);\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"An error occurred.\",\n        description: error.message || \"Unable to run code\",\n        status: \"error\",\n        duration: 6000\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: \"50%\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      mb: 6,\n      fontSize: \"8xl\",\n      textColor: \"#ffffff\",\n      fontWeight: \"bold\",\n      children: \"Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"solid\",\n      colorScheme: \"yellow\",\n      mb: 4,\n      isLoading: isLoading,\n      onClick: runCode,\n      _hover: {\n        bg: \"#fff\"\n      } // Change background color on hover\n      ,\n      _active: {\n        bg: \"#\"\n      } // Change background color on click\n      ,\n      _focus: {\n        outline: \"none\"\n      } // Remove focus outline\n      ,\n      border: \"1px solid\",\n      borderRadius: \"md\" // Apply border radius\n      ,\n      boxShadow: \"md\" // Apply box shadow\n      ,\n      px: 4 // Apply padding on X-axis\n      ,\n      py: 2 // Apply padding on Y-axis\n      ,\n      fontSize: \"md\" // Set font size\n      ,\n      fontWeight: \"bold\" // Set font weight\n      ,\n      children: \"Run Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      height: \"100vh\",\n      p: 3,\n      color: isError ? \"red.400\" : \"\",\n      bg: isError ? \"red.50\" : \"#4D4D4d\",\n      border: \"5px solid\",\n      borderRadius: 4,\n      borderColor: isError ? \"black.500\" : \"#000\",\n      overflow: \"scroll\" // Set overflow to scroll\n      ,\n      children: output ? output.map((line, i) => /*#__PURE__*/_jsxDEV(Text, {\n        children: line\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }, this)) : 'Click \"Run Code\" to see the output here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"/vuUYQR/2sR4+bBoVW5MoHhRXVM=\", false, function () {\n  return [useToast];\n});\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","Box","Button","Text","useToast","executeCode","jsxDEV","_jsxDEV","Output","editorRef","language","_s","toast","output","setOutput","isLoading","setIsLoading","isError","setIsError","runCode","sourceCode","current","getValue","run","result","split","stderr","error","console","log","title","description","message","status","duration","w","children","mb","fontSize","textColor","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","variant","colorScheme","onClick","_hover","bg","_active","_focus","outline","border","borderRadius","boxShadow","px","py","height","p","color","borderColor","overflow","map","line","i","_c","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/Output.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Box, Button, Text, useToast } from \"@chakra-ui/react\";\nimport { executeCode } from \"../api\";\n\nconst Output = ({ editorRef, language }) => {\n  const toast = useToast();\n  const [output, setOutput] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const runCode = async () => {\n    const sourceCode = editorRef.current.getValue();\n    if (!sourceCode) return;\n    try {\n      setIsLoading(true);\n      const { run: result } = await executeCode(language, sourceCode);\n      setOutput(result.output.split(\"\\n\"));\n      result.stderr ? setIsError(true) : setIsError(false);\n    } catch (error) {\n      console.log(error);\n      toast({\n        title: \"An error occurred.\",\n        description: error.message || \"Unable to run code\",\n        status: \"error\",\n        duration: 6000,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box w=\"50%\">\n      <Text mb={6} fontSize=\"8xl\" textColor=\"#ffffff\" fontWeight=\"bold\">\n        Output\n      </Text>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"yellow\"\n        mb={4}\n        isLoading={isLoading}\n        onClick={runCode}\n        _hover={{ bg: \"#fff\" }} // Change background color on hover\n        _active={{ bg: \"#\" }} // Change background color on click\n        _focus={{ outline: \"none\" }} // Remove focus outline\n        border=\"1px solid\"\n        borderRadius=\"md\" // Apply border radius\n        boxShadow=\"md\" // Apply box shadow\n        px={4} // Apply padding on X-axis\n        py={2} // Apply padding on Y-axis\n        fontSize=\"md\" // Set font size\n        fontWeight=\"bold\" // Set font weight\n      >\n        Run Code\n      </Button>\n      <Box\n        height=\"100vh\"\n        p={3}\n        color={isError ? \"red.400\" : \"\"}\n        bg={isError ? \"red.50\" : \"#4D4D4d\"}\n        border=\"5px solid\"\n        borderRadius={4}\n        borderColor={isError ? \"black.500\" : \"#000\"}\n        overflow=\"scroll\" // Set overflow to scroll\n      >\n        {output\n          ? output.map((line, i) => <Text key={i}>{line}</Text>)\n          : 'Click \"Run Code\" to see the output here'}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Output;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}