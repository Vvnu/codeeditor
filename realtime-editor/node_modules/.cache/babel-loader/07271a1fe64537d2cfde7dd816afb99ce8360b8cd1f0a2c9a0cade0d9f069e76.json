{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Box, HStack } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  roomId,\n  username\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  console.log('📝 CodeEditor mounted with:', {\n    roomId,\n    username\n  });\n  const debouncedSend = useCallback(debounce(value => {\n    if (!isReceivingUpdate.current) {\n      const data = {\n        msg: value,\n        roomId,\n        username\n      };\n      console.log('📤 Sending code update:', data);\n      socket.emit(\"send\", data);\n    } else {\n      console.log('⏸️ Skipping send - currently receiving update');\n    }\n  }, 300), [roomId, username]);\n  const onMount = editor => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n  const onSelect = selectedLanguage => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = {\n      msg: CODE_SNIPPETS[selectedLanguage],\n      roomId,\n      username,\n      language: selectedLanguage\n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    socket.on(\"receive\", data => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n\n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n\n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n          language: language,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            minimap: {\n              enabled: false\n            }\n          },\n          height: \"100vh\",\n          theme: \"vs-dark\",\n          language: language,\n          defaultValue: CODE_SNIPPETS[language],\n          value: value,\n          onMount: onMount,\n          onChange: newValue => handleInputChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        editorRef: editorRef,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"PiO8iqXoEUzNIkEx/0Wx7qSQg2A=\");\n_c = CodeEditor;\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","Box","HStack","Editor","LanguageSelector","CODE_SNIPPETS","Output","socket","PropTypes","debounce","jsxDEV","_jsxDEV","CodeEditor","roomId","username","_s","editorRef","value","setValue","language","setLanguage","initialLoad","isReceivingUpdate","console","log","debouncedSend","current","data","msg","emit","onMount","editor","focus","onSelect","selectedLanguage","on","setTimeout","off","handleInputChange","newValue","children","spacing","w","fileName","_jsxFileName","lineNumber","columnNumber","options","minimap","enabled","height","theme","defaultValue","onChange","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/CodeEditor.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState, } from \"react\";\nimport { Box, HStack } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\n\nconst CodeEditor = ({ roomId, username }) => {\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n\n  console.log('📝 CodeEditor mounted with:', { roomId, username });\n\n  const debouncedSend = useCallback(\n    debounce((value) => {\n      if (!isReceivingUpdate.current) {\n        const data = { msg: value, roomId, username };\n        console.log('📤 Sending code update:', data);\n        socket.emit(\"send\", data);\n      } else {\n        console.log('⏸️ Skipping send - currently receiving update');\n      }\n    }, 300), [roomId, username]\n  );\n\n  const onMount = (editor) => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n\n  const onSelect = (selectedLanguage) => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = { \n      msg: CODE_SNIPPETS[selectedLanguage], \n      roomId, \n      username,\n      language: selectedLanguage \n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    \n    socket.on(\"receive\", (data) => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n      \n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n      \n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n\n  const handleInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <HStack spacing={4}>\n        <Box w=\"50%\">\n          <LanguageSelector language={language} onSelect={onSelect} />\n          <Editor\n            options={{ minimap: { enabled: false } }}\n            height=\"100vh\"\n            theme=\"vs-dark\"\n            language={language}\n            defaultValue={CODE_SNIPPETS[language]}\n            value={value}\n            onMount={onMount}\n            onChange={(newValue) => handleInputChange(newValue)}\n          />\n        </Box>\n        <Output editorRef={editorRef} language={language} />\n      </HStack>\n    </Box>\n  );\n};\n\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}