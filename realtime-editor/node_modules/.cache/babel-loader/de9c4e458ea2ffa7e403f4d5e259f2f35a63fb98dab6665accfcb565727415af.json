{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Box, HStack, Button, useToast } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  roomId,\n  username\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n  console.log('📝 CodeEditor mounted with:', {\n    roomId,\n    username\n  });\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n\n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n\n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n\n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n  const debouncedSend = useCallback(debounce(value => {\n    if (!isReceivingUpdate.current) {\n      const data = {\n        msg: value,\n        roomId,\n        username\n      };\n      console.log('📤 Sending code update:', data);\n      socket.emit(\"send\", data);\n    } else {\n      console.log('⏸️ Skipping send - currently receiving update');\n    }\n  }, 300), [roomId, username]);\n  const onMount = editor => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n  const onSelect = selectedLanguage => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = {\n      msg: CODE_SNIPPETS[selectedLanguage],\n      roomId,\n      username,\n      language: selectedLanguage\n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    socket.on(\"receive\", data => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n\n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n\n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: saveCode,\n        size: \"md\",\n        _hover: {\n          bg: \"blue.600\"\n        },\n        children: \"\\uD83D\\uDCBE Save Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: loadLatestSave,\n        size: \"md\",\n        _hover: {\n          bg: \"green.600\"\n        },\n        children: \"\\uD83D\\uDCC2 Load Saved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n          language: language,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            minimap: {\n              enabled: false\n            }\n          },\n          height: \"100vh\",\n          theme: \"vs-dark\",\n          language: language,\n          defaultValue: CODE_SNIPPETS[language],\n          value: value,\n          onMount: onMount,\n          onChange: newValue => handleInputChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        editorRef: editorRef,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"a/el/5rilYLlY459ZbHqTsthm7A=\", false, function () {\n  return [useToast];\n});\n_c = CodeEditor;\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","Box","HStack","Button","useToast","Editor","LanguageSelector","CODE_SNIPPETS","Output","socket","PropTypes","debounce","jsxDEV","_jsxDEV","CodeEditor","roomId","username","_s","editorRef","value","setValue","language","setLanguage","initialLoad","isReceivingUpdate","toast","console","log","saveCode","saveData","code","timestamp","Date","toISOString","saveKey","now","localStorage","setItem","JSON","stringify","title","description","toLocaleTimeString","status","duration","isClosable","error","loadLatestSave","latestSaveKey","savedData","getItem","parsedData","parse","toLocaleString","debouncedSend","current","data","msg","emit","onMount","editor","focus","onSelect","selectedLanguage","on","setTimeout","off","handleInputChange","newValue","children","spacing","mb","colorScheme","onClick","size","_hover","bg","fileName","_jsxFileName","lineNumber","columnNumber","w","options","minimap","enabled","height","theme","defaultValue","onChange","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/CodeEditor.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState, } from \"react\";\nimport { Box, HStack, Button, useToast } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\n\nconst CodeEditor = ({ roomId, username }) => {\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n\n  console.log('📝 CodeEditor mounted with:', { roomId, username });\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n      \n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n      \n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n      \n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n      \n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      \n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        \n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n        \n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const debouncedSend = useCallback(\n    debounce((value) => {\n      if (!isReceivingUpdate.current) {\n        const data = { msg: value, roomId, username };\n        console.log('📤 Sending code update:', data);\n        socket.emit(\"send\", data);\n      } else {\n        console.log('⏸️ Skipping send - currently receiving update');\n      }\n    }, 300), [roomId, username]\n  );\n\n  const onMount = (editor) => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n\n  const onSelect = (selectedLanguage) => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = { \n      msg: CODE_SNIPPETS[selectedLanguage], \n      roomId, \n      username,\n      language: selectedLanguage \n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    \n    socket.on(\"receive\", (data) => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n      \n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n      \n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n\n  const handleInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <HStack spacing={4} mb={4}>\n        <Button\n          colorScheme=\"blue\"\n          onClick={saveCode}\n          size=\"md\"\n          _hover={{ bg: \"blue.600\" }}\n        >\n          💾 Save Code\n        </Button>\n        <Button\n          colorScheme=\"green\"\n          onClick={loadLatestSave}\n          size=\"md\"\n          _hover={{ bg: \"green.600\" }}\n        >\n          📂 Load Saved\n        </Button>\n      </HStack>\n      <HStack spacing={4}>\n        <Box w=\"50%\">\n          <LanguageSelector language={language} onSelect={onSelect} />\n          <Editor\n            options={{ minimap: { enabled: false } }}\n            height=\"100vh\"\n            theme=\"vs-dark\"\n            language={language}\n            defaultValue={CODE_SNIPPETS[language]}\n            value={value}\n            onMount={onMount}\n            onChange={(newValue) => handleInputChange(newValue)}\n          />\n        </Box>\n        <Output editorRef={editorRef} language={language} />\n      </HStack>\n    </Box>\n  );\n};\n\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}