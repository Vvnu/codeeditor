{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Box, HStack } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  roomId\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n  const debouncedSend = useCallback(debounce(value => {\n    socket.emit(\"send\", {\n      msg: value,\n      roomId\n    });\n  }, 300), [roomId]);\n  const onMount = editor => {\n    editorRef.current = editor;\n    editor.focus();\n  };\n  const onSelect = selectedLanguage => {\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n  };\n  useEffect(() => {\n    if (initialLoad.current) {\n      initialLoad.current = false;\n      return;\n    }\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n  useEffect(() => {\n    socket.on(\"receive\", data => {\n      setValue(data.msg);\n    });\n    return () => {\n      socket.off(\"receive\");\n    };\n  }, []);\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n          language: language,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            minimap: {\n              enabled: false\n            }\n          },\n          height: \"100vh\",\n          theme: \"vs-dark\",\n          language: language,\n          defaultValue: CODE_SNIPPETS[language],\n          value: value,\n          onMount: onMount,\n          onChange: newValue => handleInputChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        editorRef: editorRef,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"lcJB3nnnjBt7TM+EzTb1HSBXUmY=\");\n_c = CodeEditor;\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired\n};\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","Box","HStack","Editor","LanguageSelector","CODE_SNIPPETS","Output","socket","PropTypes","debounce","jsxDEV","_jsxDEV","CodeEditor","roomId","_s","editorRef","value","setValue","language","setLanguage","initialLoad","debouncedSend","emit","msg","onMount","editor","current","focus","onSelect","selectedLanguage","on","data","off","handleInputChange","newValue","children","spacing","w","fileName","_jsxFileName","lineNumber","columnNumber","options","minimap","enabled","height","theme","defaultValue","onChange","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/CodeEditor.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState, } from \"react\";\nimport { Box, HStack } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\n\nconst CodeEditor = ({ roomId }) => {\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const initialLoad = useRef(true);\n\n  const debouncedSend = useCallback(\n    debounce((value) => {\n      socket.emit(\"send\", { msg: value, roomId });\n    }, 300), [roomId]\n  );\n\n  const onMount = (editor) => {\n    editorRef.current = editor;\n    editor.focus();\n  };\n\n  const onSelect = (selectedLanguage) => {\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n  };\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      initialLoad.current = false;\n      return;\n    }\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n\n  useEffect(() => {\n    socket.on(\"receive\", (data) => {\n      setValue(data.msg);\n    });\n\n    return () => {\n      socket.off(\"receive\");\n    };\n  }, []);\n\n  const handleInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <HStack spacing={4}>\n        <Box w=\"50%\">\n          <LanguageSelector language={language} onSelect={onSelect} />\n          <Editor\n            options={{ minimap: { enabled: false } }}\n            height=\"100vh\"\n            theme=\"vs-dark\"\n            language={language}\n            defaultValue={CODE_SNIPPETS[language]}\n            value={value}\n            onMount={onMount}\n            onChange={(newValue) => handleInputChange(newValue)}\n          />\n        </Box>\n        <Output editorRef={editorRef} language={language} />\n      </HStack>\n    </Box>\n  );\n};\n\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}