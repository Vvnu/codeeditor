{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, HStack, Button, useToast } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  roomId,\n  username\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const [savedVersions, setSavedVersions] = useState([]);\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n  console.log('📝 CodeEditor mounted with:', {\n    roomId,\n    username\n  });\n\n  // Get all saved versions for this room\n  const getSavedVersions = () => {\n    const versions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(`code_save_${roomId}_`)) {\n        try {\n          const savedData = JSON.parse(localStorage.getItem(key));\n          versions.push({\n            key: key,\n            ...savedData\n          });\n        } catch (error) {\n          console.error('Error parsing saved version:', error);\n        }\n      }\n    }\n    // Sort by timestamp (newest first)\n    return versions.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  };\n\n  // Load a specific saved version\n  const loadVersion = savedData => {\n    try {\n      setValue(savedData.code);\n      setLanguage(savedData.language);\n      toast({\n        title: \"Version Loaded!\",\n        description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      console.log('📂 Loaded specific version:', savedData);\n    } catch (error) {\n      console.error('❌ Error loading version:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Delete a saved version\n  const deleteVersion = key => {\n    try {\n      localStorage.removeItem(key);\n      setSavedVersions(getSavedVersions());\n      toast({\n        title: \"Version Deleted!\",\n        description: \"Saved version has been removed\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('❌ Error deleting version:', error);\n      toast({\n        title: \"Delete Failed\",\n        description: \"Could not delete this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Check for version to load from sessionStorage\n  useEffect(() => {\n    const loadVersionData = sessionStorage.getItem('loadVersion');\n    if (loadVersionData) {\n      try {\n        const savedData = JSON.parse(loadVersionData);\n        setValue(savedData.code);\n        setLanguage(savedData.language);\n        toast({\n          title: \"Version Loaded!\",\n          description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n\n        // Clear the sessionStorage\n        sessionStorage.removeItem('loadVersion');\n        console.log('📂 Loaded version from sessionStorage:', savedData);\n      } catch (error) {\n        console.error('❌ Error loading version from sessionStorage:', error);\n        sessionStorage.removeItem('loadVersion');\n      }\n    }\n  }, [toast]);\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n\n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n\n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n\n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Navigate to save history page\n  const showSaveHistory = () => {\n    navigate(`/history/${roomId}`);\n  };\n  const debouncedSend = useCallback(debounce(value => {\n    if (!isReceivingUpdate.current) {\n      const data = {\n        msg: value,\n        roomId,\n        username\n      };\n      console.log('📤 Sending code update:', data);\n      socket.emit(\"send\", data);\n    } else {\n      console.log('⏸️ Skipping send - currently receiving update');\n    }\n  }, 300), [roomId, username]);\n  const onMount = editor => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n  const onSelect = selectedLanguage => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = {\n      msg: CODE_SNIPPETS[selectedLanguage],\n      roomId,\n      username,\n      language: selectedLanguage\n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    socket.on(\"receive\", data => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n\n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n\n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: saveCode,\n        size: \"md\",\n        _hover: {\n          bg: \"blue.600\"\n        },\n        children: \"\\uD83D\\uDCBE Save Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: loadLatestSave,\n        size: \"md\",\n        _hover: {\n          bg: \"green.600\"\n        },\n        children: \"\\uD83D\\uDCC2 Load Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"purple\",\n        onClick: showSaveHistory,\n        size: \"md\",\n        _hover: {\n          bg: \"purple.600\"\n        },\n        children: \"\\uD83D\\uDCCB Save History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n          language: language,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            minimap: {\n              enabled: false\n            }\n          },\n          height: \"100vh\",\n          theme: \"vs-dark\",\n          language: language,\n          defaultValue: CODE_SNIPPETS[language],\n          value: value,\n          onMount: onMount,\n          onChange: newValue => handleInputChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        editorRef: editorRef,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"ySpdZyE4KH0WtTKiyic5OqZB8Rk=\", false, function () {\n  return [useNavigate, useToast];\n});\n_c = CodeEditor;\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useNavigate","Box","HStack","Button","useToast","Editor","LanguageSelector","CODE_SNIPPETS","Output","socket","PropTypes","debounce","jsxDEV","_jsxDEV","CodeEditor","roomId","username","_s","navigate","editorRef","value","setValue","language","setLanguage","savedVersions","setSavedVersions","initialLoad","isReceivingUpdate","toast","console","log","getSavedVersions","versions","i","localStorage","length","key","startsWith","savedData","JSON","parse","getItem","push","error","sort","a","b","Date","timestamp","loadVersion","code","title","description","toLocaleString","status","duration","isClosable","deleteVersion","removeItem","loadVersionData","sessionStorage","saveCode","saveData","toISOString","saveKey","now","setItem","stringify","toLocaleTimeString","loadLatestSave","latestSaveKey","parsedData","showSaveHistory","debouncedSend","current","data","msg","emit","onMount","editor","focus","onSelect","selectedLanguage","on","setTimeout","off","handleInputChange","newValue","children","spacing","mb","colorScheme","onClick","size","_hover","bg","fileName","_jsxFileName","lineNumber","columnNumber","w","options","minimap","enabled","height","theme","defaultValue","onChange","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/CodeEditor.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState, } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, HStack, Button, useToast } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\n\nconst CodeEditor = ({ roomId, username }) => {\n  const navigate = useNavigate();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const [savedVersions, setSavedVersions] = useState([]);\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n\n  console.log('📝 CodeEditor mounted with:', { roomId, username });\n\n  // Get all saved versions for this room\n  const getSavedVersions = () => {\n    const versions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(`code_save_${roomId}_`)) {\n        try {\n          const savedData = JSON.parse(localStorage.getItem(key));\n          versions.push({\n            key: key,\n            ...savedData\n          });\n        } catch (error) {\n          console.error('Error parsing saved version:', error);\n        }\n      }\n    }\n    // Sort by timestamp (newest first)\n    return versions.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  };\n\n  // Load a specific saved version\n  const loadVersion = (savedData) => {\n    try {\n      setValue(savedData.code);\n      setLanguage(savedData.language);\n      \n      toast({\n        title: \"Version Loaded!\",\n        description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      console.log('📂 Loaded specific version:', savedData);\n    } catch (error) {\n      console.error('❌ Error loading version:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Delete a saved version\n  const deleteVersion = (key) => {\n    try {\n      localStorage.removeItem(key);\n      setSavedVersions(getSavedVersions());\n      \n      toast({\n        title: \"Version Deleted!\",\n        description: \"Saved version has been removed\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('❌ Error deleting version:', error);\n      toast({\n        title: \"Delete Failed\",\n        description: \"Could not delete this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Check for version to load from sessionStorage\n  useEffect(() => {\n    const loadVersionData = sessionStorage.getItem('loadVersion');\n    if (loadVersionData) {\n      try {\n        const savedData = JSON.parse(loadVersionData);\n        setValue(savedData.code);\n        setLanguage(savedData.language);\n        \n        toast({\n          title: \"Version Loaded!\",\n          description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n        \n        // Clear the sessionStorage\n        sessionStorage.removeItem('loadVersion');\n        console.log('📂 Loaded version from sessionStorage:', savedData);\n      } catch (error) {\n        console.error('❌ Error loading version from sessionStorage:', error);\n        sessionStorage.removeItem('loadVersion');\n      }\n    }\n  }, [toast]);\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n      \n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n      \n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n      \n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n      \n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      \n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        \n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n        \n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Navigate to save history page\n  const showSaveHistory = () => {\n    navigate(`/history/${roomId}`);\n  };\n\n  const debouncedSend = useCallback(\n    debounce((value) => {\n      if (!isReceivingUpdate.current) {\n        const data = { msg: value, roomId, username };\n        console.log('📤 Sending code update:', data);\n        socket.emit(\"send\", data);\n      } else {\n        console.log('⏸️ Skipping send - currently receiving update');\n      }\n    }, 300), [roomId, username]\n  );\n\n  const onMount = (editor) => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n\n  const onSelect = (selectedLanguage) => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = { \n      msg: CODE_SNIPPETS[selectedLanguage], \n      roomId, \n      username,\n      language: selectedLanguage \n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    \n    socket.on(\"receive\", (data) => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n      \n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n      \n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n\n  const handleInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <HStack spacing={4} mb={4}>\n        <Button\n          colorScheme=\"blue\"\n          onClick={saveCode}\n          size=\"md\"\n          _hover={{ bg: \"blue.600\" }}\n        >\n          💾 Save Code\n        </Button>\n        <Button\n          colorScheme=\"green\"\n          onClick={loadLatestSave}\n          size=\"md\"\n          _hover={{ bg: \"green.600\" }}\n        >\n          📂 Load Latest\n        </Button>\n        <Button\n          colorScheme=\"purple\"\n          onClick={showSaveHistory}\n          size=\"md\"\n          _hover={{ bg: \"purple.600\" }}\n        >\n          📋 Save History\n        </Button>\n      </HStack>\n\n      <HStack spacing={4}>\n        <Box w=\"50%\">\n          <LanguageSelector language={language} onSelect={onSelect} />\n          <Editor\n            options={{ minimap: { enabled: false } }}\n            height=\"100vh\"\n            theme=\"vs-dark\"\n            language={language}\n            defaultValue={CODE_SNIPPETS[language]}\n            value={value}\n            onMount={onMount}\n            onChange={(newValue) => handleInputChange(newValue)}\n          />\n        </Box>\n        <Output editorRef={editorRef} language={language} />\n      </HStack>\n    </Box>\n  );\n};\n\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}