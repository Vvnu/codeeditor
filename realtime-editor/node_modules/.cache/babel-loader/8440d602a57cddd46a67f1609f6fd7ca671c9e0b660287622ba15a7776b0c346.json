{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\components\\\\CodeEditor.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Box, HStack, Button, useToast, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, VStack, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  roomId,\n  username\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const [savedVersions, setSavedVersions] = useState([]);\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  console.log('📝 CodeEditor mounted with:', {\n    roomId,\n    username\n  });\n\n  // Get all saved versions for this room\n  const getSavedVersions = () => {\n    const versions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(`code_save_${roomId}_`)) {\n        try {\n          const savedData = JSON.parse(localStorage.getItem(key));\n          versions.push({\n            key: key,\n            ...savedData\n          });\n        } catch (error) {\n          console.error('Error parsing saved version:', error);\n        }\n      }\n    }\n    // Sort by timestamp (newest first)\n    return versions.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  };\n\n  // Load a specific saved version\n  const loadVersion = savedData => {\n    try {\n      setValue(savedData.code);\n      setLanguage(savedData.language);\n      toast({\n        title: \"Version Loaded!\",\n        description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      onClose();\n      console.log('📂 Loaded specific version:', savedData);\n    } catch (error) {\n      console.error('❌ Error loading version:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Delete a saved version\n  const deleteVersion = key => {\n    try {\n      localStorage.removeItem(key);\n      setSavedVersions(getSavedVersions());\n      toast({\n        title: \"Version Deleted!\",\n        description: \"Saved version has been removed\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('❌ Error deleting version:', error);\n      toast({\n        title: \"Delete Failed\",\n        description: \"Could not delete this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n\n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n\n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n\n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n\n      // Update saved versions list\n      setSavedVersions(getSavedVersions());\n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true\n      });\n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Show save history\n  const showSaveHistory = () => {\n    const versions = getSavedVersions();\n    setSavedVersions(versions);\n    onOpen();\n  };\n  const debouncedSend = useCallback(debounce(value => {\n    if (!isReceivingUpdate.current) {\n      const data = {\n        msg: value,\n        roomId,\n        username\n      };\n      console.log('📤 Sending code update:', data);\n      socket.emit(\"send\", data);\n    } else {\n      console.log('⏸️ Skipping send - currently receiving update');\n    }\n  }, 300), [roomId, username]);\n  const onMount = editor => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n  const onSelect = selectedLanguage => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = {\n      msg: CODE_SNIPPETS[selectedLanguage],\n      roomId,\n      username,\n      language: selectedLanguage\n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    socket.on(\"receive\", data => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n\n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n\n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      mb: 4,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: saveCode,\n        size: \"md\",\n        _hover: {\n          bg: \"blue.600\"\n        },\n        children: \"\\uD83D\\uDCBE Save Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: loadLatestSave,\n        size: \"md\",\n        _hover: {\n          bg: \"green.600\"\n        },\n        children: \"\\uD83D\\uDCC2 Load Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"purple\",\n        onClick: showSaveHistory,\n        size: \"md\",\n        _hover: {\n          bg: \"purple.600\"\n        },\n        children: \"\\uD83D\\uDCCB Save History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      size: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: [\"Save History - Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          pb: 6,\n          children: savedVersions.length === 0 ? /*#__PURE__*/_jsxDEV(Text, {\n            children: \"No saved versions found for this room.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 3,\n            align: \"stretch\",\n            children: savedVersions.map((version, index) => /*#__PURE__*/_jsxDEV(Box, {\n              p: 3,\n              border: \"1px\",\n              borderColor: \"gray.200\",\n              borderRadius: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                justify: \"space-between\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: \"bold\",\n                  children: [\"Version \", savedVersions.length - index]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: new Date(version.timestamp).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"sm\",\n                color: \"gray.600\",\n                mb: 2,\n                children: [\"Language: \", version.language, \" | Saved by: \", version.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                color: \"gray.400\",\n                noOfLines: 2,\n                children: [version.code.substring(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 2,\n                mt: 2,\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  colorScheme: \"blue\",\n                  onClick: () => loadVersion(version),\n                  children: \"Load\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"sm\",\n                  colorScheme: \"red\",\n                  onClick: () => deleteVersion(version.key),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this)]\n            }, version.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        w: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(LanguageSelector, {\n          language: language,\n          onSelect: onSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          options: {\n            minimap: {\n              enabled: false\n            }\n          },\n          height: \"100vh\",\n          theme: \"vs-dark\",\n          language: language,\n          defaultValue: CODE_SNIPPETS[language],\n          value: value,\n          onMount: onMount,\n          onChange: newValue => handleInputChange(newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Output, {\n        editorRef: editorRef,\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"yv47fg5f4Fa1dgcAeWk/Bz/TZfo=\", false, function () {\n  return [useToast, useDisclosure];\n});\n_c = CodeEditor;\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired\n};\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","Box","HStack","Button","useToast","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","VStack","Text","useDisclosure","Editor","LanguageSelector","CODE_SNIPPETS","Output","socket","PropTypes","debounce","jsxDEV","_jsxDEV","CodeEditor","roomId","username","_s","editorRef","value","setValue","language","setLanguage","savedVersions","setSavedVersions","initialLoad","isReceivingUpdate","toast","isOpen","onOpen","onClose","console","log","getSavedVersions","versions","i","localStorage","length","key","startsWith","savedData","JSON","parse","getItem","push","error","sort","a","b","Date","timestamp","loadVersion","code","title","description","toLocaleString","status","duration","isClosable","deleteVersion","removeItem","saveCode","saveData","toISOString","saveKey","now","setItem","stringify","toLocaleTimeString","loadLatestSave","latestSaveKey","parsedData","showSaveHistory","debouncedSend","current","data","msg","emit","onMount","editor","focus","onSelect","selectedLanguage","on","setTimeout","off","handleInputChange","newValue","children","spacing","mb","colorScheme","onClick","size","_hover","bg","fileName","_jsxFileName","lineNumber","columnNumber","pb","align","map","version","index","p","border","borderColor","borderRadius","justify","fontWeight","fontSize","color","noOfLines","substring","mt","w","options","minimap","enabled","height","theme","defaultValue","onChange","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/components/CodeEditor.jsx"],"sourcesContent":["import { useCallback, useEffect, useRef, useState, } from \"react\";\nimport { Box, HStack, Button, useToast, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, VStack, Text, useDisclosure } from \"@chakra-ui/react\";\nimport { Editor } from \"@monaco-editor/react\";\nimport LanguageSelector from \"./LanguageSelector\";\nimport { CODE_SNIPPETS } from \"../constants\";\nimport Output from \"./Output\";\nimport { socket } from \"../socket\";\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\n// import stripAnsi from 'strip-ansi'; // Add this line if you need stripAnsi\n\nconst CodeEditor = ({ roomId, username }) => {\n  const editorRef = useRef(null);\n  const [value, setValue] = useState(CODE_SNIPPETS[\"python\"]);\n  const [language, setLanguage] = useState(\"python\");\n  const [savedVersions, setSavedVersions] = useState([]);\n  const initialLoad = useRef(true);\n  const isReceivingUpdate = useRef(false);\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  console.log('📝 CodeEditor mounted with:', { roomId, username });\n\n  // Get all saved versions for this room\n  const getSavedVersions = () => {\n    const versions = [];\n    for (let i = 0; i < localStorage.length; i++) {\n      const key = localStorage.key(i);\n      if (key && key.startsWith(`code_save_${roomId}_`)) {\n        try {\n          const savedData = JSON.parse(localStorage.getItem(key));\n          versions.push({\n            key: key,\n            ...savedData\n          });\n        } catch (error) {\n          console.error('Error parsing saved version:', error);\n        }\n      }\n    }\n    // Sort by timestamp (newest first)\n    return versions.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n  };\n\n  // Load a specific saved version\n  const loadVersion = (savedData) => {\n    try {\n      setValue(savedData.code);\n      setLanguage(savedData.language);\n      \n      toast({\n        title: \"Version Loaded!\",\n        description: `Loaded code from ${new Date(savedData.timestamp).toLocaleString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      onClose();\n      console.log('📂 Loaded specific version:', savedData);\n    } catch (error) {\n      console.error('❌ Error loading version:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Delete a saved version\n  const deleteVersion = (key) => {\n    try {\n      localStorage.removeItem(key);\n      setSavedVersions(getSavedVersions());\n      \n      toast({\n        title: \"Version Deleted!\",\n        description: \"Saved version has been removed\",\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('❌ Error deleting version:', error);\n      toast({\n        title: \"Delete Failed\",\n        description: \"Could not delete this version\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Save code to localStorage\n  const saveCode = () => {\n    try {\n      const saveData = {\n        code: value,\n        language: language,\n        roomId: roomId,\n        timestamp: new Date().toISOString(),\n        username: username\n      };\n      \n      // Create a unique key for this save\n      const saveKey = `code_save_${roomId}_${Date.now()}`;\n      \n      // Save to localStorage\n      localStorage.setItem(saveKey, JSON.stringify(saveData));\n      \n      // Also save the latest save for this room\n      localStorage.setItem(`latest_save_${roomId}`, JSON.stringify(saveData));\n      \n      // Update saved versions list\n      setSavedVersions(getSavedVersions());\n      \n      toast({\n        title: \"Code Saved!\",\n        description: `Code saved to localStorage at ${new Date().toLocaleTimeString()}`,\n        status: \"success\",\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      console.log('💾 Code saved to localStorage:', saveKey);\n    } catch (error) {\n      console.error('❌ Error saving code:', error);\n      toast({\n        title: \"Save Failed\",\n        description: \"Could not save code to localStorage\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Load the latest saved code for this room\n  const loadLatestSave = () => {\n    try {\n      const latestSaveKey = `latest_save_${roomId}`;\n      const savedData = localStorage.getItem(latestSaveKey);\n      \n      if (savedData) {\n        const parsedData = JSON.parse(savedData);\n        setValue(parsedData.code);\n        setLanguage(parsedData.language);\n        \n        toast({\n          title: \"Code Loaded!\",\n          description: `Loaded code from ${new Date(parsedData.timestamp).toLocaleString()}`,\n          status: \"success\",\n          duration: 3000,\n          isClosable: true,\n        });\n        \n        console.log('📂 Loaded saved code:', parsedData);\n      } else {\n        toast({\n          title: \"No Saved Code\",\n          description: \"No saved code found for this room\",\n          status: \"info\",\n          duration: 3000,\n          isClosable: true,\n        });\n      }\n    } catch (error) {\n      console.error('❌ Error loading saved code:', error);\n      toast({\n        title: \"Load Failed\",\n        description: \"Could not load saved code\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Show save history\n  const showSaveHistory = () => {\n    const versions = getSavedVersions();\n    setSavedVersions(versions);\n    onOpen();\n  };\n\n  const debouncedSend = useCallback(\n    debounce((value) => {\n      if (!isReceivingUpdate.current) {\n        const data = { msg: value, roomId, username };\n        console.log('📤 Sending code update:', data);\n        socket.emit(\"send\", data);\n      } else {\n        console.log('⏸️ Skipping send - currently receiving update');\n      }\n    }, 300), [roomId, username]\n  );\n\n  const onMount = (editor) => {\n    console.log('🎯 Editor mounted');\n    editorRef.current = editor;\n    editor.focus();\n  };\n\n  const onSelect = (selectedLanguage) => {\n    console.log('🔤 Language changed to:', selectedLanguage);\n    setLanguage(selectedLanguage);\n    setValue(CODE_SNIPPETS[selectedLanguage]);\n    // Send language change to other users\n    const data = { \n      msg: CODE_SNIPPETS[selectedLanguage], \n      roomId, \n      username,\n      language: selectedLanguage \n    };\n    console.log('📤 Sending language change:', data);\n    socket.emit(\"send\", data);\n  };\n\n  useEffect(() => {\n    if (initialLoad.current) {\n      console.log('🚫 Skipping initial send');\n      initialLoad.current = false;\n      return;\n    }\n    console.log('📝 Value changed, triggering debounced send');\n    debouncedSend(value);\n  }, [value, debouncedSend]);\n\n  useEffect(() => {\n    console.log('🎧 Setting up receive listener for room:', roomId);\n    \n    socket.on(\"receive\", (data) => {\n      console.log('📥 Received code update:', data);\n      isReceivingUpdate.current = true;\n      setValue(data.msg);\n      \n      // Update language if it was changed by another user\n      if (data.language) {\n        console.log('🔤 Updating language to:', data.language);\n        setLanguage(data.language);\n      }\n      \n      // Reset the flag after a short delay\n      setTimeout(() => {\n        isReceivingUpdate.current = false;\n        console.log('✅ Reset receiving flag');\n      }, 100);\n    });\n\n    return () => {\n      console.log('🧹 Cleaning up receive listener');\n      socket.off(\"receive\");\n    };\n  }, [roomId]);\n\n  const handleInputChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box>\n      <HStack spacing={4} mb={4}>\n        <Button\n          colorScheme=\"blue\"\n          onClick={saveCode}\n          size=\"md\"\n          _hover={{ bg: \"blue.600\" }}\n        >\n          💾 Save Code\n        </Button>\n        <Button\n          colorScheme=\"green\"\n          onClick={loadLatestSave}\n          size=\"md\"\n          _hover={{ bg: \"green.600\" }}\n        >\n          📂 Load Latest\n        </Button>\n        <Button\n          colorScheme=\"purple\"\n          onClick={showSaveHistory}\n          size=\"md\"\n          _hover={{ bg: \"purple.600\" }}\n        >\n          📋 Save History\n        </Button>\n      </HStack>\n      \n      {/* Save History Modal */}\n      <Modal isOpen={isOpen} onClose={onClose} size=\"xl\">\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Save History - Room: {roomId}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody pb={6}>\n            {savedVersions.length === 0 ? (\n              <Text>No saved versions found for this room.</Text>\n            ) : (\n              <VStack spacing={3} align=\"stretch\">\n                {savedVersions.map((version, index) => (\n                  <Box key={version.key} p={3} border=\"1px\" borderColor=\"gray.200\" borderRadius=\"md\">\n                    <HStack justify=\"space-between\" mb={2}>\n                      <Text fontWeight=\"bold\">\n                        Version {savedVersions.length - index}\n                      </Text>\n                      <Text fontSize=\"sm\" color=\"gray.500\">\n                        {new Date(version.timestamp).toLocaleString()}\n                      </Text>\n                    </HStack>\n                    <Text fontSize=\"sm\" color=\"gray.600\" mb={2}>\n                      Language: {version.language} | Saved by: {version.username}\n                    </Text>\n                    <Text fontSize=\"xs\" color=\"gray.400\" noOfLines={2}>\n                      {version.code.substring(0, 100)}...\n                    </Text>\n                    <HStack spacing={2} mt={2}>\n                      <Button\n                        size=\"sm\"\n                        colorScheme=\"blue\"\n                        onClick={() => loadVersion(version)}\n                      >\n                        Load\n                      </Button>\n                      <Button\n                        size=\"sm\"\n                        colorScheme=\"red\"\n                        onClick={() => deleteVersion(version.key)}\n                      >\n                        Delete\n                      </Button>\n                    </HStack>\n                  </Box>\n                ))}\n              </VStack>\n            )}\n          </ModalBody>\n        </ModalContent>\n      </Modal>\n\n      <HStack spacing={4}>\n        <Box w=\"50%\">\n          <LanguageSelector language={language} onSelect={onSelect} />\n          <Editor\n            options={{ minimap: { enabled: false } }}\n            height=\"100vh\"\n            theme=\"vs-dark\"\n            language={language}\n            defaultValue={CODE_SNIPPETS[language]}\n            value={value}\n            onMount={onMount}\n            onChange={(newValue) => handleInputChange(newValue)}\n          />\n        </Box>\n        <Output editorRef={editorRef} language={language} />\n      </HStack>\n    </Box>\n  );\n};\n\nCodeEditor.propTypes = {\n  roomId: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}