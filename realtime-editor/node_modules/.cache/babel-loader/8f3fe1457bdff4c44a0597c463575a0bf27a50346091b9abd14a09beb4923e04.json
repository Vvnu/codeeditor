{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thaku\\\\Desktop\\\\MC\\\\realtime-editor\\\\src\\\\pages\\\\EditorPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Client from '../components/Client';\nimport CodeEditor from '../components/CodeEditor';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditorPage = ({\n  username,\n  avatar\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    roomId: paramRoomId\n  } = useParams();\n  const [clients, setClients] = useState([]);\n  useEffect(() => {\n    if (username && paramRoomId) {\n      socket.emit('joinroom', {\n        username,\n        avatar,\n        roomId: paramRoomId\n      });\n      socket.on('userList', users => {\n        setClients(users);\n      });\n      socket.on('toast', message => {\n        toast.success(message);\n      });\n    }\n    return () => {\n      socket.off('userList');\n      socket.off('toast');\n    };\n  }, [username, avatar, paramRoomId]);\n\n  // Add beforeunload event listener\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      event.preventDefault();\n      event.returnValue = ''; // Chrome requires returnValue to be set\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  const fallbackCopyTextToClipboard = text => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      console.log('Fallback: Copying text command was ' + msg);\n      if (successful) {\n        toast.success('Room ID copied successfully', {\n          duration: 3000,\n          position: 'top-right'\n        });\n      } else {\n        toast.error('Failed to copy Room ID', {\n          duration: 3000,\n          position: 'top-right'\n        });\n      }\n    } catch (err) {\n      console.error('Fallback: Oops, unable to copy', err);\n      toast.error('Failed to copy Room ID', {\n        duration: 3000,\n        position: 'top-right'\n      });\n    }\n    document.body.removeChild(textArea);\n  };\n  const handleLeaveClick = () => {\n    const confirmLeave = confirm(\"Do you want to leave?\");\n    if (confirmLeave) {\n      navigate('/');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainWrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"aside\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"asideInner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logoImage\",\n            src: \"/logo-removebg.png\",\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clientsLists\",\n          children: clients.map((client, index) => /*#__PURE__*/_jsxDEV(Client, {\n            username: client.username,\n            avatar: client.avatar\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fallbackCopyTextToClipboard(paramRoomId),\n        className: \"btn copyBtn\",\n        children: \"Copy Room id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLeaveClick,\n        className: \"btn leaveBtn\",\n        children: \"Leave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editorWrap\",\n      children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n        roomId: paramRoomId,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(EditorPage, \"+Zpt/dAS+ZGs13Bdb++pdPfispA=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditorPage;\nexport default EditorPage;\nvar _c;\n$RefreshReg$(_c, \"EditorPage\");","map":{"version":3,"names":["React","useState","useEffect","Client","CodeEditor","useNavigate","useParams","toast","socket","jsxDEV","_jsxDEV","EditorPage","username","avatar","_s","navigate","roomId","paramRoomId","clients","setClients","emit","on","users","message","success","off","handleBeforeUnload","event","preventDefault","returnValue","window","addEventListener","removeEventListener","fallbackCopyTextToClipboard","text","textArea","document","createElement","value","style","top","left","position","body","appendChild","focus","select","successful","execCommand","msg","console","log","duration","error","err","removeChild","handleLeaveClick","confirmLeave","confirm","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","client","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thaku/Desktop/MC/realtime-editor/src/pages/EditorPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Client from '../components/Client';\nimport CodeEditor from '../components/CodeEditor';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { socket } from '../socket';\n\nconst EditorPage = ({ username, avatar }) => {\n  const navigate = useNavigate();\n  const { roomId: paramRoomId } = useParams();\n  const [clients, setClients] = useState([]);\n\n  useEffect(() => {\n    if (username && paramRoomId) {\n      socket.emit('joinroom', { username, avatar, roomId: paramRoomId });\n\n      socket.on('userList', (users) => {\n        setClients(users);\n      });\n\n      socket.on('toast', (message) => {\n        toast.success(message);\n      });\n    }\n\n    return () => {\n      socket.off('userList');\n      socket.off('toast');\n    };\n  }, [username, avatar, paramRoomId]);\n\n  // Add beforeunload event listener\n  useEffect(() => {\n    const handleBeforeUnload = (event) => {\n      event.preventDefault();\n      event.returnValue = ''; // Chrome requires returnValue to be set\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  const fallbackCopyTextToClipboard = (text) => {\n    var textArea = document.createElement(\"textarea\");\n    textArea.value = text;\n    textArea.style.top = \"0\";\n    textArea.style.left = \"0\";\n    textArea.style.position = \"fixed\";\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n    try {\n      var successful = document.execCommand('copy');\n      var msg = successful ? 'successful' : 'unsuccessful';\n      console.log('Fallback: Copying text command was ' + msg);\n      if (successful) {\n        toast.success('Room ID copied successfully', {\n          duration: 3000,\n          position: 'top-right',\n        });\n      } else {\n        toast.error('Failed to copy Room ID', {\n          duration: 3000,\n          position: 'top-right',\n        });\n      }\n    } catch (err) {\n      console.error('Fallback: Oops, unable to copy', err);\n      toast.error('Failed to copy Room ID', {\n        duration: 3000,\n        position: 'top-right',\n      });\n    }\n    document.body.removeChild(textArea);\n  };\n\n  const handleLeaveClick = () => {\n    const confirmLeave = confirm(\"Do you want to leave?\");\n    if (confirmLeave) {\n      navigate('/');\n    }\n  };\n\n  return (\n    <div className=\"mainWrap\">\n      <div className=\"aside\">\n        <div className=\"asideInner\">\n          <div className=\"logo\">\n            <img className=\"logoImage\" src=\"/logo-removebg.png\" alt=\"logo\" />\n          </div>\n          <h3>Connected</h3>\n          <div className=\"clientsLists\">\n            {clients.map((client, index) => (\n              <Client key={index} username={client.username} avatar={client.avatar} />\n            ))}\n          </div>\n        </div>\n        <button onClick={() => fallbackCopyTextToClipboard(paramRoomId)} className=\"btn copyBtn\">Copy Room id</button>\n        <button onClick={handleLeaveClick} className=\"btn leaveBtn\">Leave</button>\n      </div>\n      <div className=\"editorWrap\">\n        <CodeEditor roomId={paramRoomId} username={username} />\n      </div>\n    </div>\n  );\n};\n\nexport default EditorPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEW,MAAM,EAAEC;EAAY,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC3C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,IAAIK,WAAW,EAAE;MAC3BT,MAAM,CAACY,IAAI,CAAC,UAAU,EAAE;QAAER,QAAQ;QAAEC,MAAM;QAAEG,MAAM,EAAEC;MAAY,CAAC,CAAC;MAElET,MAAM,CAACa,EAAE,CAAC,UAAU,EAAGC,KAAK,IAAK;QAC/BH,UAAU,CAACG,KAAK,CAAC;MACnB,CAAC,CAAC;MAEFd,MAAM,CAACa,EAAE,CAAC,OAAO,EAAGE,OAAO,IAAK;QAC9BhB,KAAK,CAACiB,OAAO,CAACD,OAAO,CAAC;MACxB,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACXf,MAAM,CAACiB,GAAG,CAAC,UAAU,CAAC;MACtBjB,MAAM,CAACiB,GAAG,CAAC,OAAO,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACb,QAAQ,EAAEC,MAAM,EAAEI,WAAW,CAAC,CAAC;;EAEnC;EACAf,SAAS,CAAC,MAAM;IACd,MAAMwB,kBAAkB,GAAIC,KAAK,IAAK;MACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBD,KAAK,CAACE,WAAW,GAAG,EAAE,CAAC,CAAC;IAC1B,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAEL,kBAAkB,CAAC;IAE3D,OAAO,MAAM;MACXI,MAAM,CAACE,mBAAmB,CAAC,cAAc,EAAEN,kBAAkB,CAAC;IAChE,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,2BAA2B,GAAIC,IAAI,IAAK;IAC5C,IAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;IACjDF,QAAQ,CAACG,KAAK,GAAGJ,IAAI;IACrBC,QAAQ,CAACI,KAAK,CAACC,GAAG,GAAG,GAAG;IACxBL,QAAQ,CAACI,KAAK,CAACE,IAAI,GAAG,GAAG;IACzBN,QAAQ,CAACI,KAAK,CAACG,QAAQ,GAAG,OAAO;IACjCN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,QAAQ,CAAC;IACnCA,QAAQ,CAACU,KAAK,CAAC,CAAC;IAChBV,QAAQ,CAACW,MAAM,CAAC,CAAC;IACjB,IAAI;MACF,IAAIC,UAAU,GAAGX,QAAQ,CAACY,WAAW,CAAC,MAAM,CAAC;MAC7C,IAAIC,GAAG,GAAGF,UAAU,GAAG,YAAY,GAAG,cAAc;MACpDG,OAAO,CAACC,GAAG,CAAC,qCAAqC,GAAGF,GAAG,CAAC;MACxD,IAAIF,UAAU,EAAE;QACdxC,KAAK,CAACiB,OAAO,CAAC,6BAA6B,EAAE;UAC3C4B,QAAQ,EAAE,IAAI;UACdV,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLnC,KAAK,CAAC8C,KAAK,CAAC,wBAAwB,EAAE;UACpCD,QAAQ,EAAE,IAAI;UACdV,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZJ,OAAO,CAACG,KAAK,CAAC,gCAAgC,EAAEC,GAAG,CAAC;MACpD/C,KAAK,CAAC8C,KAAK,CAAC,wBAAwB,EAAE;QACpCD,QAAQ,EAAE,IAAI;QACdV,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACAN,QAAQ,CAACO,IAAI,CAACY,WAAW,CAACpB,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMqB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,YAAY,GAAGC,OAAO,CAAC,uBAAuB,CAAC;IACrD,IAAID,YAAY,EAAE;MAChB1C,QAAQ,CAAC,GAAG,CAAC;IACf;EACF,CAAC;EAED,oBACEL,OAAA;IAAKiD,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBlD,OAAA;MAAKiD,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpBlD,OAAA;QAAKiD,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBlD,OAAA;UAAKiD,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBlD,OAAA;YAAKiD,SAAS,EAAC,WAAW;YAACE,GAAG,EAAC,oBAAoB;YAACC,GAAG,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,eACNxD,OAAA;UAAAkD,QAAA,EAAI;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBxD,OAAA;UAAKiD,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B1C,OAAO,CAACiD,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzB3D,OAAA,CAACP,MAAM;YAAaS,QAAQ,EAAEwD,MAAM,CAACxD,QAAS;YAACC,MAAM,EAAEuD,MAAM,CAACvD;UAAO,GAAxDwD,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAqD,CACxE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNxD,OAAA;QAAQ4D,OAAO,EAAEA,CAAA,KAAMrC,2BAA2B,CAAChB,WAAW,CAAE;QAAC0C,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9GxD,OAAA;QAAQ4D,OAAO,EAAEd,gBAAiB;QAACG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNxD,OAAA;MAAKiD,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBlD,OAAA,CAACN,UAAU;QAACY,MAAM,EAAEC,WAAY;QAACL,QAAQ,EAAEA;MAAS;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpD,EAAA,CArGIH,UAAU;EAAA,QACGN,WAAW,EACIC,SAAS;AAAA;AAAAiE,EAAA,GAFrC5D,UAAU;AAuGhB,eAAeA,UAAU;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}